name: Build Firmware

on:
  pull_request:
    branches: [ main, develop ]
  workflow_call:
    inputs:
      upload_artifacts:
        description: 'Whether to upload artifacts'
        required: false
        type: boolean
        default: true
    outputs:
      version:
        description: 'The version of the build'
        value: ${{ jobs.compute-version.outputs.version }}
      prefix:
        description: 'The build prefix'
        value: ${{ jobs.compute-version.outputs.prefix }}
      sha:
        description: 'The build commit SHA'
        value: ${{ jobs.compute-version.outputs.sha }}

jobs:
  compute-version:
    uses: ./.github/workflows/_version.yaml
    secrets: inherit

  build:
    needs: compute-version
    runs-on: ubuntu-latest

    strategy:
      matrix:
        environment:
          - g1000nxi_pfd1
          - g1000nxi_mfd
          - g1000nxi_pfd2
          - gma1347
          - gcu478

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Full history for git describe

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('platformio.ini') }}
          restore-keys: |
            ${{ runner.os }}-pip

      - name: Cache PlatformIO
        uses: actions/cache@v3
        with:
          path: |
            ~/.platformio/.cache
            ~/.platformio/packages
            ~/.platformio/platforms
          key: ${{ runner.os }}-pio-${{ hashFiles('**/platformio.ini') }}
          restore-keys: |
            ${{ runner.os }}-pio

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install PlatformIO
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade platformio

      - name: Build firmware
        env:
          DEVICENAME: ${{ matrix.environment == 'g1000nxi_pfd1' && 'FSDIY G1000 NXi PFD1' || matrix.environment == 'g1000nxi_mfd' && 'FSDIY G1000 NXi MFD' || matrix.environment == 'g1000nxi_pfd2' && 'FSDIY G1000 NXi PFD2' || matrix.environment == 'gma1347' && 'FSDIY GMA1347' || matrix.environment == 'gcu478' && 'FSDIY GCU478' }}
          DEVICEID: "{${{ matrix.environment == 'g1000nxi_pfd1' && secrets.G1000PFD1_DEVICEID || matrix.environment == 'g1000nxi_mfd' && secrets.G1000MFD_DEVICEID || matrix.environment == 'g1000nxi_pfd2' && secrets.G1000PFD2_DEVICEID || matrix.environment == 'gma1347' && secrets.GMA1347_DEVICEID || matrix.environment == 'gcu478' && secrets.GCU478_DEVICEID }}}"
          FIRMWAREVERSION: ${{ needs.compute-version.outputs.version }}
          AUTHKEY: "${{ secrets.SPAD_AUTHKEY }}"
        run: |          
          echo "Building for environment: " $DEVICENAME
          echo "Version: " $DEVICEVERSION
          
          export PLATFORMIO_BUILD_FLAGS="-DSPAD_AUTHKEY=\"\\\"$AUTHKEY\"\\\" -DSPAD_FRIMWAREVERSION=\"\\\"$DEVICEVERSION\"\\\" -DSPAD_DEVICEID=\"\\\"$DEVICEID\"\\\" -DSPAD_DEVICENAME=\"\\\"$DEVICENAME\"\\\""
          
          echo "Build flags: " $PLATFORMIO_BUILD_FLAGS
          pio run -e ${{ matrix.environment }}

      - name: Upload firmware artifact
        if: ${{ inputs.upload_artifacts != false }}
        uses: actions/upload-artifact@v4
        with:
          name: firmware-${{ matrix.environment }}
          path: .pio/build/${{ matrix.environment }}/firmware.hex
          retention-days: 90
